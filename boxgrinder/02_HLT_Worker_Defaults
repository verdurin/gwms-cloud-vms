DAEMON_LIST = MASTER,STARTD

# Set the execute working directory
EXECUTE = /home/glidein_pilot

# job wrapper location
USER_JOB_WRAPPER = $(LOCAL_DIR)/condor_job_wrapper.sh

# Set the default environment for the job
STARTER_JOB_ENVIRONMENT = "LD_LIBRARY_PATH=/usr/lib 'VO_CMS_SW_DIR=/cvmfs/cms.cern.ch' _JAVA_OPTIONS=-Xmx1024m"
JOB_INHERITS_STARTER_ENVIRONMENT = True

# Need to determine if RANK is necessary
#RANK = < Do we want a RANK expression?  If none given, it defaults to 0.0 >

# Including this here so that we can make the distinction between HLT/Tier 0 slots
# and "normal" glideins.  Both will be in the pool, but the HLT can only run
# certain types of jobs and we may want to restrict the type of jobs that are
# run on the Tier 0
IS_GLIDEIN = False

# include the following attributes in the STARTD and SLOT classads
STARTD_ATTRS = IS_GLIDEIN, START, LSB_RELEASE, LSB_DISTRIBUTOR_ID, LSB_DESCRIPTION
STARTD_SLOT_ATTRS = State, Activity, EnteredCurrentActivity, TotalTimeUnclaimedIdle, TotalTimeClaimedBusy

# configure confor_preen
PREEN_ARGS              = -r
PREEMPTION_REQUIREMENTS = False

# Job behaviors
CONTINUE                = True
PREEMPT                 = False
START                   = True
SUSPEND                 = False
SUSPEND_VANILLA         = False
WANT_SUSPEND            = False
WANT_SUSPEND_VANILLA    = False
WANT_UDP_COMMAND_SOCKET = False
WANT_VACATE             = True

# if it ever enters the Preempting/Vacating state, get out of it in 5 minutes
# should never happen, but it is a good precaution
KILL = (CurrentTime - EnteredCurrentActivity > 300)

# Some possibly useful statistics
StateTimer      = (CurrentTime - EnteredCurrentState)
ActivityTimer   = (CurrentTime - EnteredCurrentActivity)
ActivationTimer = (CurrentTime - JobStart)

STARTER_UPDATE_INTERVAL = 60

# randomize the TCP updates to the collector so we don't swamp the collector all
# at once
UPDATE_COLLECTOR_WITH_TCP = True
UPDATE_INTERVAL           = $RANDOM_INTEGER(270, 370, 1)
MASTER_UPDATE_INTERVAL    = $RANDOM_INTEGER(270, 330, 1)

# Set Logging
STARTD_HISTORY  = $(LOG)/StartdHistoryLog
MAX_MASTER_LOG  = 1000000
MAX_STARTD_LOG  = 10000000
MAX_STARTER_LOG = 10000000
